" ######### VUNDLE CONFIG
" ----------------------------------------------------------------------------
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
 set rtp+=~/.vim/bundle/Vundle.vim
 call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
" Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

Plugin 'scrooloose/nerdtree'  " file tree
Plugin 'airblade/vim-gitgutter'
Plugin 'flazz/vim-colorschemes'
Plugin 'ctrlpvim/ctrlp.vim' " fuzzy finder

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just
" :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal

" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"
" END OF VUNDLE
" --------------------------------------------------------------------------------

" ##### Start of Vim settings 
filetype plugin indent on          " filetype detection and settings
syntax on                          " syntax highlighting
silent! runtime macros/matchit.vim " matchit comes with Vim
set nocompatible                   " not strictly necessary but useful in some scenarii
set backspace=indent,eol,start     " let the backspace key work "normally"
set hidden                         " hide unsaved buffers
set incsearch                      " incremental search rules
set laststatus=2                   " not strictly necessary but good for consistency
set ruler                          " shows line number in the status line
set switchbuf=useopen,usetab       " better behavior for the quickfix window and :sb
set tags=./tags;/,tags;/           " search tags files efficiently
set wildmenu                       " better command line completion, shows a list of matches
set number                         " regular line numbers
set noswapfile                     " don't create swapfiles

colorscheme molokai
set colorcolumn=80                 " color the 80th line so you don't type too much

set autoindent                     " copy indentation of line above
set expandtab                      " Indent with 2 spaces- see
set shiftwidth=2                   " http://vim.wikia.com/wiki/Indenting_source_code
set softtabstop=2
autocmd FileType html setlocal shiftwidth=2 tabstop=2 " example custom config
nnoremap gb :buffers<CR>:sb<Space> " quick buffer navigation
" ##### End

" Auto indent for yml files
" --------------------------------------------------------------
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType yml setlocal ts=2 sts=2 sw=2 expandtab


" NERDTree configuration
" --------------------------------------------------------------------------------------------
   autocmd VimEnter * NERDTree           " open nerdtree by default
   map <C-n> :NERDTreeToggle<CR>          " toggle nerd tree
   let NERDTreeShowHidden = 1            " show hidden files by default
   let NERDTreeMinimalUI = 1             " only relevant parts
   let NERDTreeDirArrows = 1             " add arrows
   let NERDTreeIgnore = ['\.DS_Store\|\.sass-cache']   " ignore certain files and patterns
"  autocmd VimEnter * wincmd p           " start cursor on file pane

" FuzzyFinder (CtrlP) Settings
" --------------------------------------------------------------------------------------------
  let g:ctrlp_cmd = 'CtrlP'
  let g:ctrlp_map = '<c-p>'
  let g:ctrlp_custom_ignore = {
\ 'dir' : '\.sass-cache$\|bower_components$\|node_modules$\|\.git$\|tmp$\|\.svn$\|\.sass-cache$\|public/compiled$\|vendor/gems$',
\ 'file': '\.git$\|\.hg$\|\.svn$\|\.scssc$'
\ }


" Change cursor shape between insert and normal mode in iTerm2.app
" ------------------------------------------------------------------------------------------
if $TERM_PROGRAM =~ "iTerm"
   let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
   let &t_EI = "\<Esc>]50;CursorShape=0\x7" " Block in normal mode
endif

" Powerline setup ------------------------------------------------------------
set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/

" Always show statusline
" set laststatus=2
"
" " Use 256 colours (Use this setting only if your terminal supports 256
" colours)
" set t_Co=256
